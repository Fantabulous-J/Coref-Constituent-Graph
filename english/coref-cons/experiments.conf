# Main configuration. Do not edit! Copy to experiments.conf and change that.
best {
  # Edit this
  data_dir = .
  model_type = independent
  # Computation limits.
  max_num_candidates = 3900
  max_top_antecedents = 50
  max_training_sentences = 5
  top_span_ratio = 0.4
  max_num_speakers = 20
  max_segment_len = 256

  # Learning
  bert_learning_rate = 1e-5
  task_learning_rate = 2e-4
  num_docs = 2802

  # Model hyperparameters.
  dropout_rate = 0.3
  ffnn_size = 1000
  ffnn_depth = 1
  num_epochs = 20
  feature_size = 20
  max_span_width = 30
  use_metadata = true
  use_features = true
  use_segment_distance = true
  model_heads = true
  coref_depth = 2
  coarse_to_fine = true
  fine_grained = true
  use_prior = true

  # Other.
  train_path = train.english.jsonlines
  eval_path = dev.english.jsonlines
  conll_eval_path = dev.english.v4_gold_conll
  single_example = true
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 1000
  report_frequency = 100
  log_root = .
  adam_eps = 1e-6
  task_optimizer = adam
}

# baseline model
spanbert_base = ${best}{
  seed = 2333
  num_docs = 2802
  bert_learning_rate = 2e-05
  task_learning_rate = 0.0001
  max_segment_len = 384
  ffnn_size = 3000
  hidden_size = 768
  mention_loss = false
  mention_loss_ratio = 0.5
  loss_start_ratio=0.3
  loss_end_ratio=0.3
  loss_span_ratio=0.3
  train_path = conll_data/train.english.384.jsonlines
  eval_path = conll_data/dev.english.384.jsonlines
  test_path = conll_data/test.english.384.jsonlines
  conll_dev_path = conll_data/dev.english.v4_gold_conll
  conll_test_path = conll_data/test.english.v4_gold_conll
  max_training_sentences = 3
  bert_config_file = spanbert_base/bert_config.json
  vocab_file = spanbert_base/vocab.txt
  best_checkpoint = train_spanbert_base_384/model_best.checkpoint
  tf_checkpoint = spanbert_base/model.max.ckpt
  init_checkpoint_dir = spanbert_base
  load_from_pretrained = true
}

train_spanbert_base_mention = ${spanbert_base}{
  mention_loss = true
}

train_spanbert_base_mention_cons = ${train_spanbert_base_mention}{
  gat_dropout_rate = 0.2
  num_iterations = 2
  task_learning_rate = 3e-4
  num_epochs = 40
  num_heads = 4
  cons_hidden_size = 300
  singleton = false
  cons_vocab_file = conll_data/constituent_gold_vocab.txt
  train_cons_path = conll_data/train.english.constituency.jsonlines
  eval_cons_path = conll_data/dev.english.constituency.jsonlines
  test_cons_path = conll_data/test.english.constituency.jsonlines
  best_checkpoint = train_spanbert_base_mention_cons_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual = ${train_spanbert_base_mention_cons}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_384/model_best.checkpoint
  singleton = false
}

train_spanbert_base_mention_cons_dual_token = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_token_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_concat = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_concat_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_gru_fusion = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_gru_fusion_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_token_concat = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_token_concat_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_token_gru_fusion = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_token_gru_fusion_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_gru_multi_order = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_gru_multi_order_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2 = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_6324 = ${train_spanbert_base_mention_cons_dual}{
  seed = 6324
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_6324_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_4396 = ${train_spanbert_base_mention_cons_dual}{
  seed = 4396
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_4396_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_9527 = ${train_spanbert_base_mention_cons_dual}{
  seed = 9527
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_9527_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_3527 = ${train_spanbert_base_mention_cons_dual}{
  seed = 3527
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_3527_384/model_best.checkpoint
}

# mention filter
train_spanbert_base_mention_cons_filter = ${train_spanbert_base_mention_cons_dual}{
  gold_mention = false
  best_checkpoint = train_spanbert_base_mention_cons_filter_384/model_best.checkpoint
}

# no dual
train_spanbert_base_mention_cons_multi_order2 = ${train_spanbert_base_mention_cons_dual}

# no higher-order
train_spanbert_base_mention_cons_dual_plus = ${train_spanbert_base_mention_cons_dual}

# no dual & higher-order
train_spanbert_base_mention_cons = ${train_spanbert_base_mention_cons_dual}

# no gate mechanism to fuse syntax information with contextualized embeddings
train_spanbert_base_mention_cons_dual_plus_multi_order2_no_gate = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_no_gate_384/model_best.checkpoint
}

# constituent node is not initialized with start, end and type, instead just with type and updated with graph networks
train_spanbert_base_mention_cons_dual_plus_multi_order2_no_start_end = ${train_spanbert_base_mention_cons_dual}{
  cons_hidden_size = 768
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_no_start_end_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_edge_type_emb = ${train_spanbert_base_mention_cons_dual}{
  num_edge_types = 5
  cons_edge_hidden_size = 100
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_edge_type_emb_384/model_best.checkpoint
}

# cons-cons edge type + cons-token edge type(whether a token is the start or end index of a given cons node)
train_spanbert_base_mention_cons_dual_plus_multi_order2_edge_token_type_emb = ${train_spanbert_base_mention_cons_dual}{
  num_edge_types = 7
  cons_edge_hidden_size = 100
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_edge_token_type_emb_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_additive_attention = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_additive_attention_384/model_best.checkpoint
}

# 2021-04-12 22:32:26,309 - INFO - __main__ - - @@@@@ BEST DEV F1 : 79.67, Precision : 80.30, Recall : 79.05,
# 2021-04-12 22:32:26,310 - INFO - __main__ - - @@@@@ TEST when DEV best F1 : 79.49, Precision : 79.82, Recall : 79.17,
# correct number
# 2021-04-14 03:12:24,502 - INFO - __main__ - - @@@@@ BEST DEV F1 : 80.28, Precision : 80.82, Recall : 79.74,
# 2021-04-14 03:12:24,502 - INFO - __main__ - - @@@@@ TEST when DEV best F1 : 79.84, Precision : 79.84, Recall : 79.85,
train_spanbert_base_mention_cons_dual_plus_multi_order2_siblings = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_siblings_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_siblings_additive_attention = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_siblings_additive_attention_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order2_dep_head = ${train_spanbert_base_mention_cons_dual}{
  train_cons_path = conll_data/train.english.constituency.head.jsonlines
  eval_cons_path = conll_data/dev.english.constituency.head.jsonlines
  test_cons_path = conll_data/test.english.constituency.head.jsonlines
  train_dep_path = conll_data/train.english.depparse.gold.jsonlines
  eval_dep_path = conll_data/dev.english.depparse.gold.jsonlines
  test_dep_path = conll_data/test.english.depparse.gold.jsonlines
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order2_dep_head_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_single_gat_layer_multi_order2 = ${train_spanbert_base_mention_cons_dual}{
  num_iterations = 1
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_single_gat_layer_multi_order2_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_gru_multi_order2 = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_gru_multi_order2_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_dual_plus_multi_order4 = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_plus_multi_order4_384/model_best.checkpoint
}

# out of memory
train_spanbert_base_mention_cons_dual_gru_multi_order4 = ${train_spanbert_base_mention_cons_dual}{
  best_checkpoint = train_spanbert_base_mention_cons_dual_gru_multi_order4_384/model_best.checkpoint
}


train_spanbert_base_mention_cons_allennlp = ${train_spanbert_base_mention_cons}{
  cons_vocab_file = conll_data/constituent_allennlp_vocab.txt
  train_cons_path = conll_data/train.english.constituency.allennlp.jsonlines
  eval_cons_path = conll_data/dev.english.constituency.allennlp.jsonlines
  test_cons_path = conll_data/test.english.constituency.allennlp.jsonlines
  best_checkpoint = train_spanbert_base_mention_cons_allennlp_384/model_best.checkpoint
  num_heads = 4
}

train_spanbert_base_mention_cons_allennlp_dual_token = ${train_spanbert_base_mention_cons_allennlp}{
  best_checkpoint = train_spanbert_base_mention_cons_allennlp_dual_token_384/model_best.checkpoint
  singleton = false
}

train_spanbert_base_mention_cons_allennlp_dual_gru = ${train_spanbert_base_mention_cons_allennlp_dual_token}{
  best_checkpoint = train_spanbert_base_mention_cons_allennlp_dual_gru_384/model_best.checkpoint
}

# forward and backward cc gat layer
train_spanbert_base_mention_cons_allennlp_dual_plus = ${train_spanbert_base_mention_cons_allennlp}{
  best_checkpoint = train_spanbert_base_mention_cons_allennlp_dual_plus_384/model_best.checkpoint
}

# 2021-01-09 08:10:22,102 - INFO - __main__ - - @@@@@ BEST DEV F1 : 78.49, Precision : 79.33, Recall : 77.68,
# 2021-01-09 08:10:22,102 - INFO - __main__ - - @@@@@ TEST when DEV best F1 : 78.47, Precision : 78.98, Recall : 77.97,
train_spanbert_base_mention_cons_allennlp_heads8 = ${train_spanbert_base_mention_cons_allennlp}{
  cons_hidden_size = 128
  num_heads = 8
  num_iterations = 2
}

train_spanbert_base_mention_cons_bert_crf_dual_plus = ${train_spanbert_base_mention_cons}{
  singleton = false
  cons_vocab_file = conll_data/constituent_bert_crf_vocab.txt
  train_cons_path = conll_data/train.english.constituency.bert.crf.jsonlines
  eval_cons_path = conll_data/dev.english.constituency.bert.crf.jsonlines
  test_cons_path = conll_data/test.english.constituency.bert.crf.jsonlines
  best_checkpoint = train_spanbert_base_mention_cons_bert_crf_dual_plus_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_bert_crf_dual_plus_multi_order = ${train_spanbert_base_mention_cons_bert_crf_dual_plus}{
  best_checkpoint = train_spanbert_base_mention_cons_bert_crf_dual_plus_multi_order_384/model_best.checkpoint
}

train_spanbert_base_mention_cons_bert_crf_dual_plus_multi_order2 = ${train_spanbert_base_mention_cons_bert_crf_dual_plus}{
  best_checkpoint = train_spanbert_base_mention_cons_bert_crf_dual_plus_multi_order2_384/model_best.checkpoint
}

train_spanbert_base_dep_dual_plus_multi_order2 = ${train_spanbert_base_mention_cons}{
  dep_vocab_file = conll_data/dep_gold_vocab.txt
  train_dep_path = conll_data/train.english.depparse.gold.jsonlines
  eval_dep_path = conll_data/dev.english.depparse.gold.jsonlines
  test_dep_path = conll_data/test.english.depparse.gold.jsonlines
  dep_hidden_size = 300
  gat_dropout_rate = 0.2
  num_iterations = 2
  num_heads = 4
  task_learning_rate = 3e-4
  num_epochs = 40
  singleton = false
  gold_mention = false
  best_checkpoint = train_spanbert_base_dep_dual_plus_multi_order2_384/model_best.checkpoint
}

train_spanbert_base_cons_dep_dual_plus_multi_order2 = ${train_spanbert_base_dep_dual_plus_multi_order2}{
  best_checkpoint = train_spanbert_base_cons_dep_dual_plus_multi_order2_384/model_best.checkpoint
}


spanbert_large = ${best}{
  seed = 2333
  num_docs = 2802
  bert_learning_rate = 1e-05
  task_learning_rate = 0.0003
  max_segment_len = 512
  ffnn_size = 3000
  hidden_size = 1024
  mention_loss = true
  mention_loss_ratio = 0.5
  mention_proposal = false
  loss_start_ratio=0.3
  loss_end_ratio=0.3
  loss_span_ratio=0.3
  train_path = conll_data/train.english.512.jsonlines
  eval_path = conll_data/dev.english.512.jsonlines
  test_path = conll_data/test.english.512.jsonlines
  conll_dev_path = conll_data/dev.english.v4_gold_conll
  conll_test_path = conll_data/test.english.v4_gold_conll
  max_training_sentences = 3
  bert_config_file = spanbert_large/bert_config.json
  vocab_file = spanbert_large/vocab.txt
  best_checkpoint = train_spanbert_large_512/model_best.checkpoint
  tf_checkpoint = ${best.log_root}/spanbert_large/model.max.ckpt
  init_checkpoint_dir = spanbert_large
  load_from_pretrained = true
}

train_spanbert_large = ${spanbert_large}{
  init_checkpoint_dir = spanbert_large
}

train_spanbert_large_mention_cons = ${train_spanbert_large}{
  gat_dropout_rate = 0.2
  num_iterations = 2
  num_heads = 8
  task_learning_rate = 5e-4
  num_epochs = 40
  best_checkpoint = train_spanbert_large_mention_cons_512/model_best.checkpoint
  cons_hidden_size = 256
  cons_vocab_file = conll_data/constituent_gold_vocab.txt
  train_cons_path = conll_data/train.english.constituency.jsonlines
  eval_cons_path = conll_data/dev.english.constituency.jsonlines
  test_cons_path = conll_data/test.english.constituency.jsonlines
  singleton = false
}

train_spanbert_large_mention_cons_dual_plus_multi_order2 = ${train_spanbert_large_mention_cons}{
  best_checkpoint = train_spanbert_large_mention_cons_dual_plus_multi_order2_512/model_best.checkpoint
}

train_spanbert_large_mention_cons_dual_plus_multi_order2_4396 = ${train_spanbert_large_mention_cons}{
  seed = 4396
  best_checkpoint = train_spanbert_large_mention_cons_dual_plus_multi_order2_4396_512/model_best.checkpoint
}

train_spanbert_large_mention_cons_dual_plus_multi_order2_6324 = ${train_spanbert_large_mention_cons}{
  seed = 6324
  best_checkpoint = train_spanbert_large_mention_cons_dual_plus_multi_order2_6324_512/model_best.checkpoint
}

train_spanbert_large_mention_cons_dual_plus_multi_order2_9527 = ${train_spanbert_large_mention_cons}{
  seed = 9527
  best_checkpoint = train_spanbert_large_mention_cons_dual_plus_multi_order2_9527_512/model_best.checkpoint
}

train_spanbert_large_mention_cons_dual_plus_multi_order2_3527 = ${train_spanbert_large_mention_cons}{
  seed = 3527
  best_checkpoint = train_spanbert_large_mention_cons_dual_plus_multi_order2_3527_512/model_best.checkpoint
}